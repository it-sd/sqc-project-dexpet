<!DOCTYPE html>
<html lang="en">
<%- include('partials/header.ejs') %>
</head>

<!-- First Grid -->
<div class="w3-row-padding w3-padding-64 w3-container">
  <div class="w3-content">
    <div class="w3-twothird">
      <h1>Game Import</h1>
      <h5 class="w3-padding-32">Here is where we import games and receive information from the API.</h5>
    </div>

    <div class="w3-third w3-center">
      <button class="importBtn" onclick="getNHLInfo()" type="button">Import</button>
    </div>
  </div>
</div>

<!-- Second Grid -->
<div class="w3-row-padding w3-light-grey w3-padding-64 w3-container">
  <div class="w3-content">
    <div class="w3-third w3-center">
      <i class="fa fa-coffee w3-padding-64 w3-text-red w3-margin-right"></i>
    </div>

    <div class="w3-twothird">
      <h1>What goes into our "calcualtion?", well really it's...</h1>
      <h5 class="w3-padding-32">Words words words</h5>

      <p class="w3-text-grey">Another area for us to put information into if we need to.</p>
    </div>
  </div>
</div>

<div class="w3-container w3-black w3-center w3-opacity w3-padding-64">
    <h1 class="w3-margin w3-xlarge">Quote of the day: Russian Machine Never Break</h1>
</div>


<script>
  // Function to handle button click event
function getNHLInfo() {
  const TOKEN = '<%= process.env.TOKEN %>';
  const date = new Date();
  const year = date.getFullYear();
  const month = date.getMonth() + 1;
  const day = date.getDate();

  // Fetch NHL daily schedule
  fetch(`http://localhost:5162/https://api.sportradar.us/nhl/trial/v7/en/games/2023/03/06/schedule.json?api_key=${TOKEN}`)
    .then(response => response.json())
    .then(data => {

      // Are the Washington Capitals  playing? If so grab the gameID
      const games = data.games
      let gameID = null
      for (let i = 0; i < games.length; i++) {
        if (games[i].away_team.name === "Washington Capitals" || games[i].home_team.name === "Washington Capitals") {
          gameID = games[i].id
          break
        }
      }

      if (gameID !== null) {
        // Fetch for game info using gameID
        fetch(`http://localhost:5162/https://api.sportradar.us/nhl/trial/v7/en/games/${gameID}/summary.json?api_key=${TOKEN}`)
          .then(response => response.json())
          .then(data => {

            // Get information from the game 

            const homeTeam = data.home_team.name
            const awayTeam = data.away_team.name
            const homeTeamGoals = data.home_team.scoring.goals
            const awayTeamGoals = data.away_team.scoring.goals
            const ovechkinGoals = data.home_team.players.find(player => player.last_name === "Ovechkin").statistics.goals

            // Insert game data into Postgres database

            const opponent = homeTeam === "Washington Capitals" ? awayTeam : homeTeam
            const opponentGoals = homeTeam === "Washington Capitals" ? awayTeamGoals : homeTeamGoals
            const home = data.venue.name.includes("Capital One Arena") ? "Y" : "N"
            const washingtonCapitalsGoals = homeTeam === "Washington Capitals" ? homeTeamGoals : awayTeamGoals
            const result = washingtonCapitalsGoals > opponentGoals ? "W" : "L"

            const dataToSend = {
              result,
              date,
              opponent,
              opponent_goals: opponentGoals,
              home,
              washington_capitals_goals: washingtonCapitalsGoals,
              alexander_ovechkin_goals: ovechkinGoals
            };

            const resultDiv = document.createElement('div')
            resultDiv.classList.add('card')

            const gameHeader = document.createElement('h2');
            gameHeader.textContent = `${homeTeam} vs. ${awayTeam}`
            resultDiv.appendChild(gameHeader)

            const scoreParagraph = document.createElement('p')
            scoreParagraph.textContent = `${homeTeamGoals} - ${awayTeamGoals}`
            resultDiv.appendChild(scoreParagraph)

            const ovechkinGoalsParagraph = document.createElement('p')
            ovechkinGoalsParagraph.textContent = `Ovechkin goals: ${ovechkinGoals}`
            resultDiv.appendChild(ovechkinGoalsParagraph);

            document.body.appendChild(resultDiv)

            fetch('/insertGame', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(dataToSend)
            })
            .then(response => console.log(response))
            .catch(error => console.error(error))
          })
          .catch(error => console.error(error))
      } else {
        console.log("Washington Capitals are not playing today.")
      }
    })
    .catch(error => console.error(error))
}

function getCapitals2022Games() {
  const TOKEN = process.env.TOKEN;
  const date = new Date();
  const year = date.getFullYear();
  const month = date.getMonth() + 1;
  const day = date.getDate();

  // Fetch NHL daily schedule
  fetch(`http://localhost:5162/https://api.sportradar.us/nhl/trial/v7/en/games/${year}/${month}/${day}/schedule.json?api_key=${TOKEN}`)
    .then(response => response.json())
    .then(data => {

      // Are the Washington Capitals  playing? If so grab the gameID
      const games = data.games
      let gameID = null
      for (let i = 0; i < games.length; i++) {
        if (games[i].away_team.name === "Washington Capitals" || games[i].home_team.name === "Washington Capitals") {
          gameID = games[i].id
          break
        }
      }

      if (gameID !== null) {
        // Fetch for game info using gameID
        fetch(`http://localhost:5162/https://api.sportradar.us/nhl/trial/v7/en/games/${gameID}/summary.json?api_key=${TOKEN}`)
          .then(response => response.json())
          .then(data => {

            // Get information from the game 

            const homeTeam = data.home_team.name
            const awayTeam = data.away_team.name
            const homeTeamGoals = data.home_team.scoring.goals
            const awayTeamGoals = data.away_team.scoring.goals
            const ovechkinGoals = data.home_team.players.find(player => player.last_name === "Ovechkin").statistics.goals

            // Insert game data into Postgres database

            const opponent = homeTeam === "Washington Capitals" ? awayTeam : homeTeam
            const opponentGoals = homeTeam === "Washington Capitals" ? awayTeamGoals : homeTeamGoals
            const home = data.venue.name.includes("Capital One Arena") ? "Y" : "N"
            const washingtonCapitalsGoals = homeTeam === "Washington Capitals" ? homeTeamGoals : awayTeamGoals
            const result = washingtonCapitalsGoals > opponentGoals ? "W" : "L"

            const dataToSend = {
              result,
              date,
              opponent,
              opponent_goals: opponentGoals,
              home,
              washington_capitals_goals: washingtonCapitalsGoals,
              alexander_ovechkin_goals: ovechkinGoals
            };

            const resultDiv = document.createElement('div')
            resultDiv.classList.add('card')

            const gameHeader = document.createElement('h2');
            gameHeader.textContent = `${homeTeam} vs. ${awayTeam}`
            resultDiv.appendChild(gameHeader)

            const scoreParagraph = document.createElement('p')
            scoreParagraph.textContent = `${homeTeamGoals} - ${awayTeamGoals}`
            resultDiv.appendChild(scoreParagraph)

            const ovechkinGoalsParagraph = document.createElement('p')
            ovechkinGoalsParagraph.textContent = `Ovechkin goals: ${ovechkinGoals}`
            resultDiv.appendChild(ovechkinGoalsParagraph);

            document.body.appendChild(resultDiv)

            fetch('/insertGame', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(dataToSend)
            })
            .then(response => console.log(response))
            .catch(error => console.error(error))
          })
          .catch(error => console.error(error))
      } else {
        console.log("Washington Capitals are not playing today.")
      }
    })
    .catch(error => console.error(error))
}
</script>
</html>